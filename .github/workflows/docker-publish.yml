name: CI - Build and Push Docker Image

# Disparar el workflow en cada push a la rama 'main'
on:
  push:
    branches: [ "main" ]
  # También puedes dispararlo manualmente desde la interfaz de GitHub
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Usar un runner estándar de GitHub

    steps:
      # 1. Obtener el código del repositorio
      - name: Checkout repository
        uses: actions/checkout@v4 # Usa la versión más reciente

      # 2. Configurar QEMU (para builds multi-plataforma, buena práctica)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. Configurar Docker Buildx (builder avanzado)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Iniciar sesión en Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Usar un Token de Acceso, NO la contraseña

      # 5. Construir y subir la imagen Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app # Directorio que contiene el Dockerfile y el código fuente de la app
          file: ./app/Dockerfile # Ruta explícita al Dockerfile DENTRO del contexto (ajusta si tu Dockerfile está en otro lugar)
          push: true # Indicar que SÍ queremos subir la imagen
          tags: | # Lista de etiquetas para la imagen
            ${{ secrets.DOCKERHUB_USERNAME }}/mi-todo-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/mi-todo-app:${{ github.sha }} 
          # Opcional: Añadir caché para acelerar futuras builds
          cache-from: type=gha
          cache-to: type=gha,mode=max